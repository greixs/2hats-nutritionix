{"version":3,"sources":["logo.svg","dashboard/Profile.js","MockData.js","dashboard/intakes/DetailItem.js","dashboard/intakes/Details.js","dashboard/intakes/Types.js","dashboard/Dashboard.js","searchbar/popup/QtyPicker.js","searchbar/popup/Popup.js","searchbar/SearchSuggestions.js","dashboard/DatePicker.js","searchbar/SearchBar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Profile","props","sumCalories","intakes","length","reduce","a","b","serving_size","serving_qty","nf_calories","sumCaloriesByType","type","meal_type","calculateGoalPercentage","currentCalories","goalCalories","calories","Number","toFixed","roundNumber","number","parseFloat","state","profile","this","intake_list","classes","Grid","className","root","container","spacing","justify","alignItems","item","xs","Avatar","avatar","Typography","variant","headline","height_cm","caption","src","profile_img","weight_kg","profile_name","first_name","last_name","Divider","divider","id","daily_goal","progress_line","LinearProgress","value","intake_types","map","headline6","Component","withStyles","theme","backgroundColor","breakpoints","up","minHeight","padding","margin","width","content","height","fontFamily","fontSize","fontWeight","fontStretch","fontStyle","lineHeight","letterSpacing","textAlign","color","flexGrow","diet","data_points","date","nix_item_id","food_name","serving_unit","serving_weight_grams","thumb","DetailItem","intake","qty","style","Types","zIndex","List","multiplier","ListItem","ListItemAvatar","ListItemText","primary","primaryText","secondary","secondaryText","ListItemSecondaryAction","secondaryActionText","Dashboard","addIntake","console","log","p","push","setState","changeCurrentCalories","event","findIndexByDate","setHours","i","dataDate","Date","getTime","intake_index","findDataPoints","index","data","currentDataPoints","inputRef","React","createRef","md","createMuiTheme","palette","purple","QtyPicker","servingChangeValue","size","changeQty","servingUnit","FormControl","ThemeProvider","TextField","label","aria-describedby","InputProps","endAdornment","InputAdornment","onClick","FormHelperText","Popup","base_qty","addItem","itemToAdd","mealType","photo","add","close","changeMealType","target","num","open","types","Dialog","onClose","aria-labelledby","mealThumb","alt","DialogTitle","DialogContent","itemInfo","formControl","FormLabel","Select","mealTypeSelect","native","onChange","Button","borderRadius","display","textAlignLast","getSuggestions","query","axios","get","headers","then","Object","keys","key","title","slice","renderInputComponent","inputProps","other","InputBase","fullWidth","startAdornment","position","inputprops","input","renderSectionTitle","section","align","component","getSectionSuggestions","SearchSuggestions","isLastSuggestion","suggestion","lastCommon","stateSuggestions","lastBranded","JSON","stringify","renderSuggestion","isHighlighted","selected","MenuItem","whiteSpace","handleSuggestionsFetchRequested","handleSuggestionsClearRequested","handleChange","name","newValue","getSuggestionValue","setItem","storeInputReference","autosuggest","single","popper","anchorEl","suggestions","autosuggestProps","onSuggestionsFetchRequested","onSuggestionsClearRequested","multiSection","placeholder","suggestionsContainerOpen","suggestionsList","paddingLeft","marginTop","left","right","listStyleType","suggestionImage","fab","bottom","DatePicker","format","SearchBar","handleInputChange","search","getSearchResult","results","toggleSuggestionBar","setTimeout","showSuggestionBar","togglePopup","showPopup","foods","post","config","AppBar","nav","Paper","changeDataDate","marginLeft","flex","iconButton","suggestionBar","App","day","setDate","getDate","dashboard","ref","instance","Fab","current","focus","aria-label","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"+JAAAA,EAAOC,QAAU,IAA0B,kC,8NCkFrCC,E,YACJ,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KAORC,YAAc,SAAAC,GACZ,OAAIA,EAAQC,OACHD,EAAQE,QACb,SAACC,EAAGC,GAAJ,OAAUD,EAAKC,EAAEC,aAAeD,EAAEE,YAAeF,EAAEG,cACnD,GAGG,GAfU,EAkBnBC,kBAAoB,SAACR,EAASS,GAC5B,OAAIT,EAAQC,OACHD,EAAQE,QACb,SAACC,EAAGC,GAAJ,OACEA,EAAEM,WAAaD,EACXN,EAAKC,EAAEC,aAAeD,EAAEE,YAAeF,EAAEG,YACzCJ,IACN,GAGG,GA5BU,EA+BnBQ,wBAA0B,SAACC,EAAiBC,GAC1C,IAAMC,EAAYF,EAAkBC,EAAgB,IACpD,OAAOC,EAAW,IAAM,IAAMC,OAAOD,EAASE,QAAQ,KAjCrC,EAoCnBC,YAAc,SAAAC,GACZ,OAAOH,OAAOI,WAAWD,GAAQF,QAAQ,KAlCzC,EAAKI,MAAQ,CACXC,QAAS,IAJM,E,sEAwCT,IAAD,SAC0BC,KAAKxB,MAA9ByB,EADD,EACCA,YAAaF,EADd,EACcA,QACbG,EAAYF,KAAKxB,MAAjB0B,QACFZ,EAAkBU,KAAKvB,YAAYwB,GAGzC,OACE,kBAACE,EAAA,EAAD,CAAMC,UAAWF,EAAQG,MACvB,kBAACF,EAAA,EAAD,CACEG,WAAS,EACTC,QAAS,EACTC,QAAQ,SACRC,WAAW,SACXL,UAAWF,EAAQI,WAEnB,kBAACH,EAAA,EAAD,CAAMO,MAAI,EAACC,GAAI,GACb,kBAACC,EAAA,EAAD,CAAQR,UAAWF,EAAQW,QACzB,yBAAKT,UAAU,IACb,kBAACU,EAAA,EAAD,CAAYC,QAAQ,KAAKX,UAAWF,EAAQc,UACzCjB,EAAQkB,WAEX,kBAACH,EAAA,EAAD,CAAYC,QAAQ,UAAUX,UAAWF,EAAQgB,SAAjD,SAMN,kBAACf,EAAA,EAAD,CAAMO,MAAI,EAACC,GAAI,GACb,kBAACC,EAAA,EAAD,CAAQO,IAAI,YAAYf,UAAWF,EAAQkB,eAE7C,kBAACjB,EAAA,EAAD,CAAMO,MAAI,EAACC,GAAI,GACb,kBAACC,EAAA,EAAD,CAAQR,UAAWF,EAAQW,QACzB,yBAAKT,UAAU,IACb,kBAACU,EAAA,EAAD,CAAYC,QAAQ,KAAKX,UAAWF,EAAQc,UACzCjB,EAAQsB,WAEX,kBAACP,EAAA,EAAD,CAAYC,QAAQ,UAAUX,UAAWF,EAAQgB,SAAjD,UAQR,kBAACf,EAAA,EAAD,CACEG,WAAS,EACTE,QAAQ,SACRC,WAAW,aACXL,UAAWF,EAAQoB,cAEnB,kBAACR,EAAA,EAAD,CAAYC,QAAQ,MACjBhB,EAAQwB,WADX,IACwBxB,EAAQyB,YAIlC,kBAACC,EAAA,EAAD,CAASrB,UAAWF,EAAQwB,UAE5B,kBAACvB,EAAA,EAAD,CAAMG,WAAS,EAACC,QAAS,EAAGH,UAAWF,EAAQI,WAC7C,kBAACH,EAAA,EAAD,CAAMO,MAAI,EAACC,GAAI,GACb,kBAACG,EAAA,EAAD,CAAYC,QAAQ,KAAKY,GAAG,8BACzB3B,KAAKL,YAAYL,GADpB,QAGA,kBAACwB,EAAA,EAAD,CAAYC,QAAQ,WAApB,aAGF,kBAACZ,EAAA,EAAD,CAAMO,MAAI,EAACC,GAAI,GACb,kBAACG,EAAA,EAAD,CAAYC,QAAQ,KAAKY,GAAG,iBACzB5B,EAAQ6B,WADX,QAGA,kBAACd,EAAA,EAAD,CAAYC,QAAQ,WAApB,gBAIJ,yBAAKX,UAAWF,EAAQ2B,eACtB,kBAACC,EAAA,EAAD,CACEf,QAAQ,cACRgB,MAAO/B,KAAKX,wBACVC,EACAS,EAAQ6B,eAKd,kBAACzB,EAAA,EAAD,CACEM,WAAW,SACXD,QAAQ,SACRF,WAAS,EACTF,UAAWF,EAAQ8B,aACnBzB,QAAS,GApFD,CAAC,YAAa,QAAS,QAAS,UAsFjC0B,KAAI,SAAA9C,GACT,OACE,kBAACgB,EAAA,EAAD,CAAMO,MAAI,EAACC,GAAI,GACb,kBAACG,EAAA,EAAD,CAAYC,QAAQ,KAAKX,UAAWF,EAAQgC,WACzC,EAAKhD,kBAAkBe,EAAad,IAEvC,kBAAC2B,EAAA,EAAD,CAAYC,QAAQ,WAAW5B,a,GAzIzBgD,aAkJPC,eA3NA,SAAAC,GAAK,MAAK,CACvBhC,KAAK,aACHiC,gBAAiB,WAChBD,EAAME,YAAYC,GAAG,MAAQ,CAC5BC,UAAW,UAGfnC,UAAW,CACToC,QAAS,UAEXhB,QAAS,CACPiB,OAAQ,SACRC,MAAO,QAETC,QAAS,CACPF,OAAQ,IACRD,QAAS,OAEX7B,OAAQ,CACN8B,OAAQ,OACRC,MAAO,OACPE,OAAQ,QAEV1B,YAAa,CACXuB,OAAQ,OACRL,gBAAiB,OACjBM,MAAO,OACPE,OAAQ,QAEV9B,SAAU,CACR4B,MAAO,OACPE,OAAQ,OACRC,WAAY,SACZC,SAAU,OACVC,WAAY,MACZC,YAAa,SACbC,UAAW,SACXC,WAAY,SACZC,cAAe,SACfC,UAAW,SACXC,MAAO,WAETrB,UAAW,CACTS,OAAQ,IACR,YAAa,QAEfzB,QAAS,CACP0B,MAAO,OACPE,OAAQ,OACR,YAAa,OACb,cAAe,SACf,eAAgB,SAChB,aAAc,SACd,cAAe,OACf,iBAAkB,QAClB,aAAc,SACdS,MAAO,WAETjC,aAAa,aACX,YAAa,QACZe,EAAME,YAAYC,GAAG,MAAQ,CAC5B,iBAAkB,SAGtBX,cAAe,CACb2B,SAAU,EACVd,QAAS,QAEXV,aAAc,CACZW,OAAQ,WAsJGP,CAAmB7D,GCpOvBkF,EAAO,CAChBlC,WAAY,OACZC,UAAW,YACXP,UAAW,IACXI,UAAW,GACXO,WAAY,KACZ8B,YAAa,CACX,CAEEC,KAAM,YAEN1D,YAAa,IAEf,CAEE0D,KAAM,YACN1D,YAAa,CACX,CAEE2D,YAAa,2BACbC,UAAW,kBACXC,aAAc,OAEdC,qBAAsB,GAEtB/E,YAAa,EAEbC,YAAa,IAEbF,aAAc,EACdK,UAAW,YACX4E,MACE,uEAEJ,CACEH,UAAW,eACXC,aAAc,MACdC,qBAAsB,OACtB/E,YAAa,EACbC,YAAa,OACbF,aAAc,IACdK,UAAW,QACX4E,MAAO,wDAET,CACEH,UAAW,oCACX7E,YAAa,EACb8E,aAAc,SACdC,qBAAsB,IACtB9E,YAAa,IACbF,aAAc,EACdK,UAAW,SACX4E,MAAO,wDAET,CACEH,UAAW,eACX7E,YAAa,EACb8E,aAAc,QACdC,qBAAsB,GACtB9E,YAAa,OACbF,aAAc,EACdK,UAAW,QACX4E,MAAO,wDAET,CACEH,UAAW,SACX7E,YAAa,EACb8E,aAAc,qBACdC,qBAAsB,IACtB9E,YAAa,KACbF,aAAc,EACdK,UAAW,QACX4E,MAAO,yDAIb,CAEEL,KAAM,YACN1D,YAAa,CACX,CACE4D,UAAW,aACX7E,YAAa,EACb8E,aAAc,QACdC,qBAAsB,GACtB9E,YAAa,MACbF,aAAc,EACdK,UAAW,YACX4E,MAAO,wDAET,CACEH,UAAW,gBACX7E,YAAa,GACb8E,aAAc,MACdC,qBAAsB,MACtB9E,YAAa,OACbF,aAAc,EACdK,UAAW,QACX4E,MAAO,wDAET,CACEJ,YAAa,2BACbC,UAAW,oCACXC,aAAc,KACd9E,YAAa,EACbC,YAAa,IACbF,aAAc,EACdK,UAAW,SACX4E,MACE,uEAEJ,CACEH,UAAW,eACX7E,YAAa,EACb8E,aAAc,QACdC,qBAAsB,GACtB9E,YAAa,OACbF,aAAc,EACdK,UAAW,QACX4E,MAAO,wDAET,CACEH,UAAW,SACX7E,YAAa,EACb8E,aAAc,qBACdC,qBAAsB,IACtB9E,YAAa,KACbF,aAAc,EACdK,UAAW,QACX4E,MAAO,2DC/HIC,E,iLACT,IACAC,EAAWlE,KAAKxB,MAAhB0F,OACFC,EACHD,EAAOnF,aAAemF,EAAOlF,YAChC,OACE,6BACE,yBAAKoF,MAAO,CAAExB,MAAO,GAAIE,OAAQ,IAAM3B,IAAK+C,EAAOF,QACnD,0BAAM5D,UAAU,QAAhB,IAAyB8D,EAAOL,WAChC,0BAAMzD,UAAU,WACb8D,EAAOnF,aADV,IACyBmF,EAAOJ,aADhC,KACgDI,EAAOH,qBAAuBI,EAD9E,OAGA,0BAAM/D,UAAU,YAAY8D,EAAOjF,YAAckF,Q,GAZjBhC,a,GCCHA,Y,4CCuB/BkC,E,YACJ,WAAY7F,GAAQ,qEACZA,I,sEAGE,IACAyB,EAAgBD,KAAKxB,MAArByB,YAEAC,EAAYF,KAAKxB,MAAjB0B,QACR,OACE,yBAAKkE,MAAO,CAAEE,OAAQ,IACpB,kBAACC,EAAA,EAAD,KACGtE,EAAYgC,KAAI,SAAAiC,GACf,IAAMM,EAAaN,EAAOnF,aAAemF,EAAOlF,YAChD,OACE,kBAACyF,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAAC9D,EAAA,EAAD,CAAQO,IAAK+C,EAAOF,SAEtB,kBAACW,EAAA,EAAD,CACEzE,QAAS,CACP0E,QAAS1E,EAAQ2E,YACjBC,UAAW5E,EAAQ6E,eAErBH,QAASV,EAAOL,UAChBiB,UAAS,UAAKZ,EAAOlF,YAAZ,YACPkF,EAAOJ,aADA,aAEJU,EAAaN,EAAOH,qBAFhB,SAIX,kBAACiB,EAAA,EAAD,KACE,kBAACL,EAAA,EAAD,CACEzE,QAAS,CAAE4E,UAAW5E,EAAQ+E,qBAC9BL,QAAO,UAAKJ,EAAaN,EAAOjF,YAAzB,QACP6F,UAAWZ,EAAO9E,uB,GAjClB+C,aA6CLC,cA3DD,CACZyC,YAAa,CACX9B,WAAY,gBACZC,SAAU,QAEZ+B,cAAe,CACbhC,WAAY,iBACZC,SAAU,QAEZiC,oBAAqB,CACnB3B,UAAW,UAiDAlB,CAAkBiC,GCrD3Ba,E,YACJ,WAAY1G,GAAQ,IAAD,8BACjB,4CAAMA,KAYR2G,UAAY,SAAAzE,GACV0E,QAAQC,IAAR,sBAA2B3E,IAC3B,IAAI4E,EAAI,EAAKxF,MAAMC,QAEnBuF,EAAE5B,YAAY,GAAGzD,YAAYsF,KAAK7E,GAElC,EAAK8E,SAAS,CAAEzF,QAASuF,KAnBR,EAsBnBG,sBAAwB,SAAAC,GACtB,IAAIJ,EAAI,EAAKxF,MAAMC,QACnBuF,EAAE5B,YAAY,GAAGzD,YAAYsF,KAAK,CAAEtG,YAAa,MACjD,EAAKuG,SAAS,CAAEzF,QAASuF,KAzBR,EA4BnBK,gBAAkB,SAAAhC,GAEhB,GADAA,EAAKiC,SAAS,EAAG,EAAG,EAAG,GACnB,EAAK9F,MAAMC,QACb,IAAK,IAAI8F,EAAI,EAAGA,EAAI,EAAK/F,MAAMC,QAAQ2D,YAAY/E,OAAQkH,IAAK,CAC9D,IAAIC,EAAW,IAAIC,KAAK,EAAKjG,MAAMC,QAAQ2D,YAAYmC,GAAGlC,MAE1D,GADAmC,EAASF,SAAS,EAAG,EAAG,EAAG,GACvBjC,EAAKqC,WAAaF,EAASE,UAE7B,YADA,EAAKR,SAAS,CAAES,aAAcJ,IAMpC,EAAKL,SAAS,CAAES,cAAe,KAzCd,EA4CnBC,eAAiB,SAAAC,GACf,IAAMC,EAAO,EAAKtG,MAAMC,QAAQ2D,YAC5B,EAAK5D,MAAMC,QAAQ2D,YAAY,EAAK5D,MAAMmG,cAC1C,KACJ,OAAIG,EACKA,EAAKnG,YAEL,IAhDT,EAAKH,MAAQ,CACXC,QAAS,GACTT,gBAAiB,EACjB2G,aAAc,EACdI,kBAAmB,IAGrB,EAAKC,SAAWC,IAAMC,YAVL,E,sEAuDT,IACAtG,EAAYF,KAAKxB,MAAjB0B,QACFD,EAAcD,KAAKkG,eAAelG,KAAKF,MAAMmG,cACnD,OACE,kBAAC9F,EAAA,EAAD,CAAMG,WAAS,EAACC,QAAS,GACvB,kBAACJ,EAAA,EAAD,CAAMC,UAAWF,EAAQQ,KAAMA,MAAI,EAACC,GAAI,GAAI8F,GAAI,GAC9C,kBAAC,EAAD,CAAS1G,QAASC,KAAKF,MAAMC,QAASE,YAAaA,KAGrD,kBAACE,EAAA,EAAD,CAAMC,UAAWF,EAAQQ,KAAMA,MAAI,EAACC,GAAI,GAAI8F,GAAI,GAC9C,kBAAC,EAAD,CAAOxG,YAAaA,Q,0CAO1BD,KAAKwF,SAAS,CACZzF,QAAS0D,Q,GA1EStB,aA+ETC,eAzFA,SAAAC,GAAK,MAAK,CACvBhC,KAAM,CACJmD,SAAU,EACVc,QAAS,GAEX5D,KAAM,CACJ4D,QAAS,MAmFElC,CAAmB8C,G,iHCpF5B7C,EAAQqE,YAAe,CAC3BC,QAAS,CACP/B,QAASgC,OAIE,SAASC,EAAUrI,GAChC,IAEQsI,EAAqDtI,EAArDsI,mBAAoBC,EAAiCvI,EAAjCuI,KAAMC,EAA2BxI,EAA3BwI,UAAWC,EAAgBzI,EAAhByI,YAE7C,OACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAe9E,MAAOA,GACpB,kBAAC+E,EAAA,EAAD,CACEC,MAAM,WACNtF,MAAOgF,EACPxD,MAAM,UACNxC,QAAQ,SACRuG,mBAAiB,qBACjBC,WAAY,CACVC,aACE,kBAACC,EAAA,EAAD,KACE,kBAACtH,EAAA,EAAD,CAAMK,QAAQ,SAASC,WAAW,UAChC,kBAAC,IAAD,CACEiH,QAAS,kBAAMV,EAAUD,EAAOD,MAElC,kBAAC,IAAD,CACEY,QAAS,kBAAMV,EAAUD,EAAOD,QAKxC,aAAc,YAGlB,kBAACa,EAAA,EAAD,CAAgBhG,GAAG,sBAAsBsF,K,0DChB3CW,E,YACJ,WAAYpJ,GAAQ,IAAD,8BACjB,4CAAMA,KAWRwI,UAAY,SAAAjF,GACNA,GAAS,IACX,EAAKyD,SACH,CACErB,IAAKpC,IAEP,WACE,EAAKyD,SAAS,CAAEhB,WAAY,EAAK1E,MAAMqE,IAAM,EAAKrE,MAAM+H,eAnB7C,EAyBnBC,QAAU,WAAO,IACPpH,EAAS,EAAKlC,MAAdkC,KACFqH,EAAY,CAChBlE,UAAWnD,EAAKmD,UAChB7E,YAAa,EAAKc,MAAM+H,SACxB/D,aAAcpD,EAAKoD,aACnBC,qBAAsBrD,EAAKqD,qBAC3B9E,YAAayB,EAAKzB,YAClBF,aAAc,EAAKe,MAAMqE,IACzB/E,UAAW,EAAKU,MAAMkI,SACtBhE,MAAOtD,EAAKuH,MAAMjE,OAEpBoB,QAAQC,IAAI0C,GACZ,EAAKvJ,MAAM0J,IAAIH,GACf,EAAKvJ,MAAM2J,SAvCM,EA0CnBC,eAAiB,SAAA1C,GACf,EAAKF,SAAS,CACZwC,SAAUtC,EAAM2C,OAAOtG,SA5CR,EAgDnBpC,YAAc,SAAA2I,GACZ,OAAO7I,OAAOI,WAAWyI,GAAK5I,QAAQ,KA9CtC,EAAKI,MAAQ,CACXgH,mBAAoB,GACpBe,SAAU,EACV1D,IAAK,EACLK,WAAY,EACZwD,SAAU,aARK,E,sEAoDT,IAAD,SACgChI,KAAKxB,MAApC0B,EADD,EACCA,QAASiI,EADV,EACUA,MAAOzH,EADjB,EACiBA,KAAM6H,EADvB,EACuBA,KACxBC,EAAQ,CAAC,YAAa,QAAS,QAAS,UAE9C,OADApD,QAAQC,IAAI3E,GAEV,kBAAC+H,EAAA,EAAD,CAAQF,KAAMA,EAAMG,QAASP,EAAOQ,kBAAgB,qBAClD,gCACE,yBACEhH,GAAG,YACHvB,UAAWF,EAAQ0I,UACnBzH,IAAKT,EAAKuH,MAAMjE,MAChB6E,IAAKnI,EAAKmD,aAGd,kBAACiF,EAAA,EAAD,KAAcpI,EAAOA,EAAKmD,UAAY,MACtC,kBAACpC,EAAA,EAAD,MACA,kBAACsH,EAAA,EAAD,CAAepH,GAAG,eAChB,kBAACxB,EAAA,EAAD,CAAMG,WAAS,GACb,kBAACH,EAAA,EAAD,CAAMO,MAAI,EAACC,GAAI,GACb,kBAACkG,EAAD,CACEC,mBAAoB9G,KAAKF,MAAMgH,mBAC/BC,KAAM/G,KAAKF,MAAMqE,IACjB6C,UAAW,SAAAjF,GAAK,OAAI,EAAKiF,UAAUjF,IACnCkF,YAAavG,EAAKoD,gBAGtB,kBAAC3D,EAAA,EAAD,CAAMO,MAAI,EAACC,GAAI,EAAGP,UAAWF,EAAQ8I,UACnC,+BACGhJ,KAAKL,YACJK,KAAKF,MAAM0E,WAAa9D,EAAKqD,uBAGjC,kBAAC4D,EAAA,EAAD,CAAgBhG,GAAG,gBAAnB,UAEF,kBAACxB,EAAA,EAAD,CAAMQ,GAAI,EAAGP,UAAWF,EAAQ8I,UAC9B,+BACGhJ,KAAKL,YAAYK,KAAKF,MAAM0E,WAAa9D,EAAKzB,cAEjD,kBAAC0I,EAAA,EAAD,CAAgBhG,GAAG,gBAAnB,eAIN,kBAACF,EAAA,EAAD,MACA,kBAACsH,EAAA,EAAD,CAAepH,GAAG,YAChB,kBAACuF,EAAA,EAAD,CAAanG,QAAQ,SAASX,UAAWF,EAAQ+I,aAC/C,kBAAC9I,EAAA,EAAD,KACE,kBAAC+I,EAAA,EAAD,qBACA,6BACA,kBAACC,EAAA,EAAD,CACE/I,UAAWF,EAAQkJ,eACnBC,QAAM,EACNtH,MAAO/B,KAAKF,MAAMkI,SAAWhI,KAAKF,MAAMkI,SAAWQ,EAAM,GACzDc,SAAUtJ,KAAKoI,gBAEdI,EAAMvG,KAAI,SAAA9C,GACT,OAAO,4BAAQ4C,MAAO5C,GAAOA,QAInC,6BACA,kBAACgB,EAAA,EAAD,CAAMG,WAAS,EAACE,QAAQ,YACtB,kBAAC+I,EAAA,EAAD,CAAQ7B,QAAS1H,KAAK8H,SAAtB,a,0CAQS,IACXpH,EAASV,KAAKxB,MAAdkC,KACRV,KAAKwF,SAAS,CAAEqC,SAAUnH,EAAK1B,YAAamF,IAAKzD,EAAK1B,kB,GA5HtCmD,aA+HLC,gBAhJA,SAAAC,GAAK,MAAK,CACvBuG,UAAW,CACThG,MAAO,OACPE,OAAQ,OACR0G,aAAc,OAEhBP,YAAa,CACXQ,QAAS,QAEXL,eAAgB,CACdxG,MAAO,QAEToG,SAAU,CACRU,cAAe,UAmIJtH,CAAmBwF,G,mTC3IlC,IA2CM+B,GAAiB,SAAAC,GACrB,OAAIA,EACKC,IACJC,IADI,mEAEyDF,GAC5D,CACEG,QAAS,CACP,WAAY,WACZ,YAAa,sCAIlBC,MAAK,YAAe,IAAZ5D,EAAW,EAAXA,KAIP,OAHa6D,OAAOC,KAAK9D,GAAMnE,KAAI,SAAAkI,GACjC,MAAO,CAAEC,MAAOD,EAAKpI,MAAOqE,EAAK+D,GAAKE,MAAM,EAAG,UAK9C,IASLC,GAAuB,SAAAC,GAAe,IAClCrK,EAAgCqK,EAAhCrK,QAASoG,EAAuBiE,EAAvBjE,SAAakE,EADW,aACDD,EADC,wBAGzC,OADAnF,QAAQC,IAAIiB,GAEV,kBAACmE,GAAA,EAAD,eACEC,WAAS,EACTC,eACE,kBAAClD,EAAA,EAAD,CAAgBmD,SAAS,SACvB,kBAAC,KAAD,OAGJC,WAAY,CAKV3K,QAAS,CACP4K,MAAO5K,EAAQ4K,QAGnBxE,SAAUA,GACNkE,KAKJO,GAAqB,SAAAC,GACzB,OACE,kBAAClK,EAAA,EAAD,CAAYC,QAAQ,WAAWkK,MAAM,QACnC,kBAACxJ,EAAA,EAAD,CAASyJ,UAAU,QAClBF,EAAQZ,QAKTe,GAAwB,SAAAH,GAC5B,OAAOA,EAAQjJ,OAGXqJ,G,YACJ,aAAe,IAAD,8BACZ,+CAcFC,iBAAmB,SAAAC,GACjB,IAAMC,EAAa,EAAKzL,MAAM0L,iBAAiB,GAAGzJ,MAAM,GAClD0J,EAAc,EAAK3L,MAAM0L,iBAAiB,GAAGzJ,MAAM,GACzD,OACE2J,KAAKC,UAAUL,IAAeI,KAAKC,UAAUJ,IAC7CG,KAAKC,UAAUL,IAAeI,KAAKC,UAAUF,IApBnC,EAwBdG,iBAAmB,SAACN,EAAD,GAA0C,EAA3B1B,MAA4B,IAArBiC,EAAoB,EAApBA,cACvC,OACE,kBAACtH,EAAA,EAAD,CAAMuH,SAAUD,EAAeX,UAAU,OACvC,kBAACa,GAAA,EAAD,CAAUb,UAAU,MAAM9G,MAAO,CAAE4H,WAAY,WAC7C,kBAACtH,EAAA,EAAD,KACE,kBAAC9D,EAAA,EAAD,CACEO,IAAKmK,EAAWrD,MAAMjE,MACtBI,MAAO,CAAExB,MAAO,OAAQE,OAAQ,OAAQ0G,aAAc,UAG1D,kBAAC7E,EAAA,EAAD,CAAcC,QAAS0G,EAAWzH,aAEnC,EAAKwH,iBAAiBC,GAAc,KAAO,kBAAC7J,EAAA,EAAD,CAASV,QAAQ,YApCrD,EAyCdkL,gCAAkC,YAAgB,IAAblK,EAAY,EAAZA,MACnC4H,GAAe5H,GAAOiI,MAAK,SAAA5D,GACzB,EAAKZ,SAAS,CACZgG,iBAAkBpF,QA5CV,EAiDd8F,gCAAkC,WAChC,EAAK1G,SAAS,CACZgG,iBAAkB,MAnDR,EAuDdW,aAAe,SAAAC,GAAI,OAAI,SAAC1G,EAAD,GAA0B,IAAhB2G,EAAe,EAAfA,SAC/B,EAAK7G,S,2VAAL,IACK,EAAK1F,MADV,eAEGsM,EAAOC,OA1DE,EA8DdC,mBAAqB,SAAAhB,GAEnB,OADA,EAAK9M,MAAM+N,QAAQjB,GACZA,EAAWzH,WAhEN,EAmEd2I,oBAAsB,SAAAC,GACA,OAAhBA,IACF,EAAK3B,MAAQ2B,EAAY3B,MACzB1F,QAAQC,IAAI,iBACZD,QAAQC,IAAIoH,KApEd,EAAK3M,MAAQ,CACX4M,OAAQ,GACRC,OAAQ,GACRnB,iBAAkB,GAClBoB,SAAU,KACV7K,MAAO,GACP8K,YAAa,GAEb3M,QAAS,MAXC,E,sEA2EJ,IAAD,EACoDF,KAAKF,MADzD,KACCiC,MADD,EACQ8K,YADR,EACqBD,SADrB,EAC+BpB,iBAERxL,KAAKxB,OAA3B0B,EAHD,EAGCA,QAASoG,EAHV,EAGUA,SAEXwG,EAAmB,CACvBxC,wBACAuC,YAAa7M,KAAKF,MAAM0L,iBACxBuB,4BAA6B/M,KAAKiM,gCAClCe,4BAA6BhN,KAAKkM,gCAClCI,mBAAoBtM,KAAKsM,mBACzBV,iBAAkB5L,KAAK4L,kBAGzB,OACE,yBAAKxL,UAAWF,EAAQG,MACtB,kBAAC,KAAD,eACE4M,cAAc,EACdlC,mBAAoBA,GACpBI,sBAAuBA,IACnB2B,EAJN,CAKEvC,WAAY,CACVrK,UACAyB,GAAI,2BACJ0F,MAAO,aACP6F,YAAa,iBACbnL,MAAO/B,KAAKF,MAAM4M,OAClBpD,SAAUtJ,KAAKmM,aAAa,UAC5B7F,SAAUA,GAEZjE,MAAO,CACL/B,UAAWJ,EAAQI,UACnB6M,yBAA0BjN,EAAQiN,yBAClCC,gBAAiBlN,EAAQkN,gBACzB9B,WAAYpL,EAAQoL,oB,GA9GA/E,IAAMpE,WAsHvBC,gBApOD,SAAAC,GAAK,MAAK,CACtBhC,KAAM,CACJmD,SAAU,GAEZlD,UAAW,CACTsK,SAAU,WACVtI,gBAAiB,QACjBgC,OAAQ,GAEV6I,yBAA0B,CACxB7K,gBAAiB,QACjBsI,SAAU,WACVtG,OAAQ,EACR+I,YAAahL,EAAM9B,QAAQ,GAC3BiJ,aAAcnH,EAAM9B,QAAQ,GAC5B+M,UAAWjL,EAAM9B,QAAQ,GACzBgN,KAAM,EACNC,MAAO,GAETlC,WAAY,CACV7B,QAAS,SAEX2D,gBAAiB,CACfzK,OAAQ,EACRD,QAAS,EACT+K,cAAe,QAEjBC,gBAAiB,CACf9K,MAAO,OACPE,OAAQ,OACR0G,aAAc,OAEhB9H,QAAS,CACPoB,OAAQT,EAAM9B,QAAQ,IAExBoN,IAAK,CACH/C,SAAU,WACVgD,OAAQ,KACRJ,MAAO,SA8LIpL,CAAkBgJ,I,gFC3O3ByC,G,iLACM,IACA3N,EAAYF,KAAKxB,MAAjB0B,QADD,EAEmBF,KAAKxB,MAAvBmF,EAFD,EAECA,KAAM+D,EAFP,EAEOA,QACd,OACE,yBAAKtH,UAAWF,EAAQG,MACtB,kBAACF,EAAA,EAAD,CAAMG,WAAS,EAACE,QAAQ,UACtB,kBAAC,KAAD,CAAkBkH,QAAS,kBAAMA,GAAS,MAE1C,kBAAC,KAAD,CAAQoG,OAAO,cAAcnK,GAE7B,kBAAC,KAAD,CAAqB+D,QAAS,kBAAMA,EAAQ,Y,GAX7BvF,aAkBVC,gBAxBA,SAAAC,GAAK,MAAK,CACvBhC,KAAM,CACJqC,QAAS,aAsBEN,CAAmByL,ICC5BE,G,YACJ,WAAYvP,GAAQ,IAAD,8BACjB,4CAAMA,KAmBRwP,kBAAoB,WAClB,EAAKxI,SAAS,CAAEoE,MAAO,EAAKqE,OAAOlM,QAAS,WACtC,EAAKjC,MAAM8J,MAAMjL,OAAS,EAC5B,EAAKuP,kBAEL,EAAK1I,SAAS,CAAE2I,QAAS,WAzBZ,EA8BnBD,gBAAkB,WAChBrE,IACGC,IADH,mEAEgE,EAAKhK,MAAM8J,OACvE,CACEG,QAAS,CACP,WAAY,WACZ,YAAa,sCAIlBC,MAAK,YAAe,IAAZ5D,EAAW,EAAXA,KACP,EAAKZ,SAAS,CAAE2I,QAAS/H,QA1CZ,EA8CnBgI,oBAAsB,WACpBC,YAAW,WACT,EAAK7I,SAAS,CAAE8I,mBAAoB,EAAKxO,MAAMwO,sBAC9C,MAjDc,EAoDnBC,YAAc,WACZ,EAAK/I,SAAS,CACZgJ,WAAY,EAAK1O,MAAM0O,aAtDR,EA0DnBjC,QAAU,SAAA7L,GACHA,EAAKkD,YAqBRiG,IACGC,IADH,uEAEoEpJ,EAAKkD,aACrE,CACEmG,QAAS,CACP,WAAY,WACZ,YAAa,sCAIlBC,MAAK,YAAe,IAAZ5D,EAAW,EAAXA,KACP,EAAKZ,SAAS,CAAE9E,KAAM0F,EAAKqI,MAAM,KAAM,WACrC,EAAKF,oBAhCX1E,IACG6E,KADH,wDAGI,CACE9E,MAAOlJ,EAAKmD,WAEd,CACEkG,QAAS,CACP,eAAgB,mBAChB,WAAY,WACZ,YAAa,sCAIlBC,MAAK,YAAe,IAAZ5D,EAAW,EAAXA,KACP,EAAKZ,SAAS,CAAE9E,KAAM0F,EAAKqI,MAAM,KAAM,WACrC,EAAKF,qBAzEb,EAAKzO,MAAQ,CACX8J,MAAO,GACPuE,QAAS,KACTzN,KAAM,KACN8N,WAAW,EACXF,mBAAmB,EACnB3K,KAAM,IAGR,EAAKgL,OAAS,CACZ5E,QAAS,CACP,eACE,mFAfW,E,sEAkGT,IAAD,SACuB/J,KAAKxB,MAA3B0B,EADD,EACCA,QAASoG,EADV,EACUA,SACjB,OACE,kBAACnG,EAAA,EAAD,KACE,kBAACyO,GAAA,EAAD,CAAQhE,SAAS,SAASxK,UAAWF,EAAQ2O,KAC3C,kBAACC,GAAA,EAAD,CAAO1O,UAAWF,EAAQG,MACxB,kBAAC,GAAD,CAAmBiG,SAAUA,EAAUiG,QAASvM,KAAKuM,WAEvD,kBAAC,GAAD,CACE5I,KAAM3D,KAAKxB,MAAMmF,KACjB+D,QAAS1H,KAAKxB,MAAMuQ,kBAIvB/O,KAAKF,MAAM0O,UACV,kBAAC,GAAD,CACEjG,KAAMvI,KAAKF,MAAM0O,UACjBtG,IAAK,SAAAxH,GAAI,OAAI,EAAKlC,MAAMsJ,QAAQpH,IAChCyH,MAAOnI,KAAKuO,YACZ7N,KAAMV,KAAKF,MAAMY,OAEjB,U,GAxHYyB,aA8HTC,gBAnJA,SAAAC,GAAK,MAAK,CACvBwM,IAAK,CACHvK,OAAQ,GAEVjE,KAAM,CACJqC,QAAS,UACT+G,QAAS,OACThJ,WAAY,SACZkC,OAAQ,QAEVmI,MAAO,CACLkE,WAAY3M,EAAM9B,QAAQ,GAC1B0O,KAAM,EACNvM,QAAS,SAEXwM,WAAY,CACVxM,QAAS,IAEXyM,cAAe,MAiIF/M,CAAmB2L,I,8BC5I5BqB,G,YACJ,WAAY5Q,GAAQ,IAAD,8BACjB,4CAAMA,KAQRuQ,eAAiB,SAAAM,GACf,IAAI1L,EAAO,EAAK7D,MAAM6D,KACtBA,EAAK2L,QAAQ3L,EAAK4L,UAAYF,GAC9B,EAAK7J,SAAS,CACZ7B,KAAMA,IAER,EAAK6L,UAAU7J,gBAAgBhC,IAZ/B,EAAK7D,MAAQ,CACX6D,KAAM,GAER,EAAK2C,SAAWC,IAAMC,YANL,E,sEAkBT,IAAD,OACCtG,EAAYF,KAAKxB,MAAjB0B,QACR,OACE,yBAAKE,UAAU,OACb,yBAAKA,UAAU,cACf,kBAAC,GAAD,CACE0H,QAAS,SAAApH,GAAI,OAAI,EAAK8O,UAAUrK,UAAUzE,IAC1CiD,KAAM3D,KAAKF,MAAM6D,KACjBoL,eAAgB,SAAApL,GAAI,OAAI,EAAKoL,eAAepL,IAC5C2C,SAAUtG,KAAKsG,WAEjB,kBAAC,EAAD,CACEmJ,IAAK,SAAAC,GACH,EAAKF,UAAYE,GAEnB/L,KAAM3D,KAAKF,MAAM6D,OAEnB,kBAACgM,GAAA,EAAD,CACEjI,QAAS,kBAAM,EAAKpB,SAASsJ,QAAQC,SACrCzP,UAAWF,EAAQyN,IACnBpK,MAAM,UACNuM,aAAW,OAEX,kBAAC,KAAD,U,0CAMa,IAAD,OAClB9P,KAAKwF,SACH,CACE7B,KAAM,IAAIoC,OAEZ,WACE,EAAKyJ,UAAU7J,gBAAgB,IAAII,a,GAtDzB5D,aA2DHC,gBAnEA,SAAAC,GAAK,MAAK,CACvBsL,IAAK,CACH/C,SAAU,WACVgD,OAAQ,KACRJ,MAAO,SA+DIpL,CAAmBgN,IClEdW,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,GAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM1G,MAAK,SAAA2G,GACjCA,EAAaC,kB","file":"static/js/main.2dab7b3c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","import React, { Component } from \"react\";\r\n\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    backgroundColor: \"#f5f5f5\",\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      minHeight: \"100vh\"\r\n    }\r\n  },\r\n  container: {\r\n    padding: \"10px 0\"\r\n  },\r\n  divider: {\r\n    margin: \"20px 0\",\r\n    width: \"100%\"\r\n  },\r\n  content: {\r\n    margin: \"0\",\r\n    padding: \"1px\"\r\n  },\r\n  avatar: {\r\n    margin: \"auto\",\r\n    width: \"56px\",\r\n    height: \"56px\"\r\n  },\r\n  profile_img: {\r\n    margin: \"auto\",\r\n    backgroundColor: \"blue\",\r\n    width: \"96px\",\r\n    height: \"96px\"\r\n  },\r\n  headline: {\r\n    width: \"40px\",\r\n    height: \"24px\",\r\n    fontFamily: \"Roboto\",\r\n    fontSize: \"20px\",\r\n    fontWeight: \"500\",\r\n    fontStretch: \"normal\",\r\n    fontStyle: \"normal\",\r\n    lineHeight: \"normal\",\r\n    letterSpacing: \"0.25px\",\r\n    textAlign: \"center\",\r\n    color: \"#ffffff\"\r\n  },\r\n  headline6: {\r\n    margin: \"0\",\r\n    \"font-size\": \"20px\"\r\n  },\r\n  caption: {\r\n    width: \"40px\",\r\n    height: \"16px\",\r\n    \"font-size\": \"12px\",\r\n    \"font-weight\": \"normal\",\r\n    \"font-stretch\": \"normal\",\r\n    \"font-style\": \"normal\",\r\n    \"line-height\": \"1.33\",\r\n    \"letter-spacing\": \"0.4px\",\r\n    \"text-align\": \"center\",\r\n    color: \"#ffffff\"\r\n  },\r\n  profile_name: {\r\n    \"font-size\": \"24px\",\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      \"padding-bottom\": \"30px\"\r\n    }\r\n  },\r\n  progress_line: {\r\n    flexGrow: 1,\r\n    padding: \"10px\"\r\n  },\r\n  intake_types: {\r\n    margin: \"auto\"\r\n  }\r\n});\r\n\r\nclass Profile extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      profile: []\r\n    };\r\n  }\r\n\r\n  sumCalories = intakes => {\r\n    if (intakes.length) {\r\n      return intakes.reduce(\r\n        (a, b) => a + (b.serving_size / b.serving_qty) * b.nf_calories,\r\n        0\r\n      );\r\n    }\r\n    return 0;\r\n  };\r\n\r\n  sumCaloriesByType = (intakes, type) => {\r\n    if (intakes.length) {\r\n      return intakes.reduce(\r\n        (a, b) =>\r\n          b.meal_type == type\r\n            ? a + (b.serving_size / b.serving_qty) * b.nf_calories\r\n            : a,\r\n        0\r\n      );\r\n    }\r\n    return 0;\r\n  };\r\n\r\n  calculateGoalPercentage = (currentCalories, goalCalories) => {\r\n    const calories = (currentCalories / goalCalories) * 100;\r\n    return calories > 100 ? 100 : Number(calories.toFixed(1));\r\n  };\r\n\r\n  roundNumber = number => {\r\n    return Number(parseFloat(number).toFixed(1));\r\n  };\r\n\r\n  render() {\r\n    const { intake_list, profile } = this.props;\r\n    const { classes } = this.props;\r\n    const currentCalories = this.sumCalories(intake_list);\r\n    const types = [\"breakfast\", \"lunch\", \"snack\", \"dinner\"];\r\n\r\n    return (\r\n      <Grid className={classes.root}>\r\n        <Grid\r\n          container\r\n          spacing={1}\r\n          justify=\"center\"\r\n          alignItems=\"center\"\r\n          className={classes.container}\r\n        >\r\n          <Grid item xs={4}>\r\n            <Avatar className={classes.avatar}>\r\n              <div className=\"\">\r\n                <Typography variant=\"h6\" className={classes.headline}>\r\n                  {profile.height_cm}\r\n                </Typography>\r\n                <Typography variant=\"caption\" className={classes.caption}>\r\n                  CM\r\n                </Typography>\r\n              </div>\r\n            </Avatar>\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <Avatar src=\"/jane.jpg\" className={classes.profile_img} />\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <Avatar className={classes.avatar}>\r\n              <div className=\"\">\r\n                <Typography variant=\"h6\" className={classes.headline}>\r\n                  {profile.weight_kg}\r\n                </Typography>\r\n                <Typography variant=\"caption\" className={classes.caption}>\r\n                  KG\r\n                </Typography>\r\n              </div>\r\n            </Avatar>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid\r\n          container\r\n          justify=\"center\"\r\n          alignItems=\"flex-start\"\r\n          className={classes.profile_name}\r\n        >\r\n          <Typography variant=\"h5\">\r\n            {profile.first_name} {profile.last_name}\r\n          </Typography>\r\n        </Grid>\r\n\r\n        <Divider className={classes.divider} />\r\n\r\n        <Grid container spacing={3} className={classes.container}>\r\n          <Grid item xs={6}>\r\n            <Typography variant=\"h5\" id=\"current_caloriesparseFloat\">\r\n              {this.roundNumber(currentCalories)} Cal\r\n            </Typography>\r\n            <Typography variant=\"caption\">Consumed</Typography>\r\n          </Grid>\r\n\r\n          <Grid item xs={6}>\r\n            <Typography variant=\"h5\" id=\"goal_calories\">\r\n              {profile.daily_goal} Cal\r\n            </Typography>\r\n            <Typography variant=\"caption\">Daily Goal</Typography>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <div className={classes.progress_line}>\r\n          <LinearProgress\r\n            variant=\"determinate\"\r\n            value={this.calculateGoalPercentage(\r\n              currentCalories,\r\n              profile.daily_goal\r\n            )}\r\n          />\r\n        </div>\r\n\r\n        <Grid\r\n          alignItems=\"center\"\r\n          justify=\"center\"\r\n          container\r\n          className={classes.intake_types}\r\n          spacing={4}\r\n        >\r\n          {types.map(type => {\r\n            return (\r\n              <Grid item xs={3}>\r\n                <Typography variant=\"h6\" className={classes.headline6}>\r\n                  {this.sumCaloriesByType(intake_list, type)}\r\n                </Typography>\r\n                <Typography variant=\"caption\">{type}</Typography>\r\n              </Grid>\r\n            );\r\n          })}\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\nexport default withStyles(styles)(Profile);\r\n","export let diet = {\r\n  first_name: \"Jane\",\r\n  last_name: \"Appleseed\",\r\n  height_cm: 163,\r\n  weight_kg: 57,\r\n  daily_goal: 1500,\r\n  data_points: [\r\n    {\r\n      //today's date\r\n      date: \"2019-11-5\",\r\n      //empty, let user do the input\r\n      intake_list: []\r\n    },\r\n    {\r\n      //yesterday's date\r\n      date: \"2019-11-4\",\r\n      intake_list: [\r\n        {\r\n          //branded food has nix_item_id, common food doesn't\r\n          nix_item_id: \"55c9298af0432259369100c4\",\r\n          food_name: \"Italian sausage\",\r\n          serving_unit: \"link\",\r\n          //weight of \"serving_qty\"\r\n          serving_weight_grams: 75,\r\n          //per unit of \"nf_calories\", see how Nutritionix website demo works\r\n          serving_qty: 1,\r\n          //that is per \"serving_qty\", see how Nutritionix website demo works\r\n          nf_calories: 258,\r\n          //that is how much user ate\r\n          serving_size: 2,\r\n          meal_type: \"breakfast\",\r\n          thumb:\r\n            \"https://d1r9wva3zcpswd.cloudfront.net/55c92acdf04322593691010c.jpeg\"\r\n        },\r\n        {\r\n          food_name: \"salmon salad\",\r\n          serving_unit: \"cup\",\r\n          serving_weight_grams: 407.01,\r\n          serving_qty: 1,\r\n          nf_calories: 389.27,\r\n          serving_size: 1.5,\r\n          meal_type: \"lunch\",\r\n          thumb: \"https://d2xdmhkmkbyw75.cloudfront.net/3121_thumb.jpg\"\r\n        },\r\n        {\r\n          food_name: \"boneless skinless chicken breasts\",\r\n          serving_qty: 1,\r\n          serving_unit: \"breast\",\r\n          serving_weight_grams: 120,\r\n          nf_calories: 198,\r\n          serving_size: 2,\r\n          meal_type: \"dinner\",\r\n          thumb: \"https://d2xdmhkmkbyw75.cloudfront.net/7820_thumb.jpg\"\r\n        },\r\n        {\r\n          food_name: \"slice cheese\",\r\n          serving_qty: 1,\r\n          serving_unit: \"slice\",\r\n          serving_weight_grams: 28,\r\n          nf_calories: 113.12,\r\n          serving_size: 2,\r\n          meal_type: \"snack\",\r\n          thumb: \"https://d2xdmhkmkbyw75.cloudfront.net/8185_thumb.jpg\"\r\n        },\r\n        {\r\n          food_name: \"orange\",\r\n          serving_qty: 1,\r\n          serving_unit: 'fruit (2-7/8\" dia)',\r\n          serving_weight_grams: 140,\r\n          nf_calories: 68.6,\r\n          serving_size: 2,\r\n          meal_type: \"snack\",\r\n          thumb: \"https://d2xdmhkmkbyw75.cloudfront.net/719_thumb.jpg\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      //2 days ago\r\n      date: \"2019-11-3\",\r\n      intake_list: [\r\n        {\r\n          food_name: \"fried eggs\",\r\n          serving_qty: 1,\r\n          serving_unit: \"large\",\r\n          serving_weight_grams: 46,\r\n          nf_calories: 90.16,\r\n          serving_size: 2,\r\n          meal_type: \"breakfast\",\r\n          thumb: \"https://d2xdmhkmkbyw75.cloudfront.net/1741_thumb.jpg\"\r\n        },\r\n        {\r\n          food_name: \"chicken salad\",\r\n          serving_qty: 0.5,\r\n          serving_unit: \"cup\",\r\n          serving_weight_grams: 112.1,\r\n          nf_calories: 253.99,\r\n          serving_size: 1,\r\n          meal_type: \"lunch\",\r\n          thumb: \"https://d2xdmhkmkbyw75.cloudfront.net/3121_thumb.jpg\"\r\n        },\r\n        {\r\n          nix_item_id: \"598c0695306b814040ff908b\",\r\n          food_name: \"Boneless Skinless Chicken Breasts\",\r\n          serving_unit: \"oz\",\r\n          serving_qty: 4,\r\n          nf_calories: 110,\r\n          serving_size: 1,\r\n          meal_type: \"dinner\",\r\n          thumb:\r\n            \"https://d1r9wva3zcpswd.cloudfront.net/5c04d53ff01a65ec7b2089dd.jpeg\"\r\n        },\r\n        {\r\n          food_name: \"slice cheese\",\r\n          serving_qty: 1,\r\n          serving_unit: \"slice\",\r\n          serving_weight_grams: 28,\r\n          nf_calories: 113.12,\r\n          serving_size: 2,\r\n          meal_type: \"snack\",\r\n          thumb: \"https://d2xdmhkmkbyw75.cloudfront.net/8185_thumb.jpg\"\r\n        },\r\n        {\r\n          food_name: \"orange\",\r\n          serving_qty: 1,\r\n          serving_unit: 'fruit (2-7/8\" dia)',\r\n          serving_weight_grams: 140,\r\n          nf_calories: 68.6,\r\n          serving_size: 2,\r\n          meal_type: \"snack\",\r\n          thumb: \"https://d2xdmhkmkbyw75.cloudfront.net/719_thumb.jpg\"\r\n        }\r\n      ]\r\n    }\r\n  ]\r\n};\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class DetailItem extends Component {\r\n  render() {\r\n    const { intake } = this.props;\r\n    const qty =\r\n      (intake.serving_size / intake.serving_qty);\r\n    return (\r\n      <div>\r\n        <img style={{ width: 50, height: 50 }} src={intake.thumb}></img>\r\n        <span className=\"name\"> {intake.food_name}</span>\r\n        <span className=\"serving\">\r\n          {intake.serving_size} {intake.serving_unit} ({intake.serving_weight_grams * qty} g)\r\n        </span>\r\n        <span className=\"calories\">{intake.nf_calories * qty}</span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport DetailItem from \"./DetailItem\";\r\n\r\nexport default class Details extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      intake_list: []\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { intake_list } = this.props;\r\n    // console.log(intake_list);\r\n    if (!intake_list.length) {\r\n      return <div></div>;\r\n    } else {\r\n      const intakes = intake_list.map((intake, index) => {\r\n        console.log(intake);\r\n        return <DetailItem intake={intake} />;\r\n      });\r\n\r\n      return <div>{intakes}</div>;\r\n    }\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Details from \"./Details\";\r\n\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport ImageIcon from \"@material-ui/icons/Image\";\r\nimport { fade, withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst style = {\r\n  primaryText: {\r\n    fontFamily: \"Roboto-Medium\",\r\n    fontSize: \"16px\"\r\n  },\r\n  secondaryText: {\r\n    fontFamily: \"Roboto-Regular\",\r\n    fontSize: \"14px\"\r\n  },\r\n  secondaryActionText: {\r\n    textAlign: \"right\"\r\n  }\r\n};\r\n\r\nclass Types extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    const { intake_list } = this.props;\r\n\r\n    const { classes } = this.props;\r\n    return (\r\n      <div style={{ zIndex: 2 }}>\r\n        <List>\r\n          {intake_list.map(intake => {\r\n            const multiplier = intake.serving_size / intake.serving_qty;\r\n            return (\r\n              <ListItem>\r\n                <ListItemAvatar>\r\n                  <Avatar src={intake.thumb}></Avatar>\r\n                </ListItemAvatar>\r\n                <ListItemText\r\n                  classes={{\r\n                    primary: classes.primaryText,\r\n                    secondary: classes.secondaryText\r\n                  }}\r\n                  primary={intake.food_name}\r\n                  secondary={`${intake.serving_qty} ${\r\n                    intake.serving_unit\r\n                  } (${multiplier * intake.serving_weight_grams} g)`}\r\n                />\r\n                <ListItemSecondaryAction>\r\n                  <ListItemText\r\n                    classes={{ secondary: classes.secondaryActionText }}\r\n                    primary={`${multiplier * intake.nf_calories} Cal`}\r\n                    secondary={intake.meal_type}\r\n                  />\r\n                </ListItemSecondaryAction>\r\n              </ListItem>\r\n            );\r\n          })}\r\n        </List>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(style)(Types);\r\n","import React, { Component } from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport { diet } from \"../MockData.js\";\r\nimport Types from \"./intakes/Types\";\r\n\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    zIndex: -1\r\n  },\r\n  item: {\r\n    zIndex: -1\r\n  }\r\n});\r\n\r\nclass Dashboard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      profile: {},\r\n      currentCalories: 0,\r\n      intake_index: 0,\r\n      currentDataPoints: []\r\n    };\r\n\r\n    this.inputRef = React.createRef();\r\n  }\r\n\r\n  addIntake = item => {\r\n    console.log(`adding item ${item}`);\r\n    let p = this.state.profile;\r\n\r\n    p.data_points[0].intake_list.push(item);\r\n\r\n    this.setState({ profile: p });\r\n  };\r\n\r\n  changeCurrentCalories = event => {\r\n    let p = this.state.profile;\r\n    p.data_points[1].intake_list.push({ nf_calories: 258 });\r\n    this.setState({ profile: p });\r\n  };\r\n\r\n  findIndexByDate = date => {\r\n    date.setHours(0, 0, 0, 0); // set the hours to 0\r\n    if (this.state.profile) {\r\n      for (var i = 0; i < this.state.profile.data_points.length; i++) {\r\n        let dataDate = new Date(this.state.profile.data_points[i].date);\r\n        dataDate.setHours(0, 0, 0, 0);\r\n        if (date.getTime() == dataDate.getTime()) {\r\n          this.setState({ intake_index: i });\r\n          return;\r\n        }\r\n      }\r\n    }\r\n    // if not date found then just set the index to -1 so it wont fetch any data\r\n    this.setState({ intake_index: -1 });\r\n  };\r\n\r\n  findDataPoints = index => {\r\n    const data = this.state.profile.data_points\r\n      ? this.state.profile.data_points[this.state.intake_index]\r\n      : null;\r\n    if (data) {\r\n      return data.intake_list;\r\n    } else {\r\n      return [];\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const intake_list = this.findDataPoints(this.state.intake_index);\r\n    return (\r\n      <Grid container spacing={3}>\r\n        <Grid className={classes.item} item xs={12} md={5}>\r\n          <Profile profile={this.state.profile} intake_list={intake_list} />\r\n        </Grid>\r\n\r\n        <Grid className={classes.item} item xs={12} md={7}>\r\n          <Types intake_list={intake_list} />\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      profile: diet\r\n    });\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Dashboard);\r\n","import React from \"react\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\r\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\r\nimport { purple } from \"@material-ui/core/colors\";\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: purple\r\n  }\r\n});\r\n\r\nexport default function QtyPicker(props) {\r\n  const changeValue = direction => {};\r\n\r\n  const { servingChangeValue, size, changeQty, servingUnit } = props;\r\n\r\n  return (\r\n    <FormControl>\r\n      <ThemeProvider theme={theme}>\r\n        <TextField\r\n          label=\"Servings\"\r\n          value={size}\r\n          color=\"primary\"\r\n          variant=\"filled\"\r\n          aria-describedby=\"weight-helper-text\"\r\n          InputProps={{\r\n            endAdornment: (\r\n              <InputAdornment>\r\n                <Grid justify=\"center\" alignItems=\"center\">\r\n                  <KeyboardArrowUpIcon\r\n                    onClick={() => changeQty(size + servingChangeValue)}\r\n                  />\r\n                  <KeyboardArrowDownIcon\r\n                    onClick={() => changeQty(size - servingChangeValue)}\r\n                  />\r\n                </Grid>\r\n              </InputAdornment>\r\n            ),\r\n            \"aria-label\": \"weight\"\r\n          }}\r\n        />\r\n        <FormHelperText id=\"weight-helper-text\">{servingUnit}</FormHelperText>\r\n      </ThemeProvider>\r\n    </FormControl>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nimport QtyPicker from \"./QtyPicker\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst styles = theme => ({\r\n  mealThumb: {\r\n    width: \"64px\",\r\n    height: \"64px\",\r\n    borderRadius: \"4px\"\r\n  },\r\n  formControl: {\r\n    display: \"flex\"\r\n  },\r\n  mealTypeSelect: {\r\n    width: \"100%\"\r\n  },\r\n  itemInfo: {\r\n    textAlignLast: \"end\"\r\n  }\r\n});\r\n\r\nclass Popup extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      servingChangeValue: 0.5,\r\n      base_qty: 0,\r\n      qty: 1,\r\n      multiplier: 1,\r\n      mealType: \"breakfast\"\r\n    };\r\n  }\r\n\r\n  changeQty = value => {\r\n    if (value >= 0.5) {\r\n      this.setState(\r\n        {\r\n          qty: value\r\n        },\r\n        () => {\r\n          this.setState({ multiplier: this.state.qty / this.state.base_qty });\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  addItem = () => {\r\n    const { item } = this.props;\r\n    const itemToAdd = {\r\n      food_name: item.food_name,\r\n      serving_qty: this.state.base_qty,\r\n      serving_unit: item.serving_unit,\r\n      serving_weight_grams: item.serving_weight_grams,\r\n      nf_calories: item.nf_calories,\r\n      serving_size: this.state.qty,\r\n      meal_type: this.state.mealType,\r\n      thumb: item.photo.thumb\r\n    };\r\n    console.log(itemToAdd);\r\n    this.props.add(itemToAdd);\r\n    this.props.close();\r\n  };\r\n\r\n  changeMealType = event => {\r\n    this.setState({\r\n      mealType: event.target.value\r\n    });\r\n  };\r\n\r\n  roundNumber = num => {\r\n    return Number(parseFloat(num).toFixed(2));\r\n  };\r\n\r\n  render() {\r\n    const { classes, close, item, open } = this.props;\r\n    const types = [\"breakfast\", \"lunch\", \"snack\", \"dinner\"];\r\n    console.log(item);\r\n    return (\r\n      <Dialog open={open} onClose={close} aria-labelledby=\"form-dialog-title\">\r\n        <figure>\r\n          <img\r\n            id=\"itemImage\"\r\n            className={classes.mealThumb}\r\n            src={item.photo.thumb}\r\n            alt={item.food_name}\r\n          />\r\n        </figure>\r\n        <DialogTitle>{item ? item.food_name : null}</DialogTitle>\r\n        <Divider />\r\n        <DialogContent id=\"mealDetails\">\r\n          <Grid container>\r\n            <Grid item xs={4}>\r\n              <QtyPicker\r\n                servingChangeValue={this.state.servingChangeValue}\r\n                size={this.state.qty}\r\n                changeQty={value => this.changeQty(value)}\r\n                servingUnit={item.serving_unit}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={4} className={classes.itemInfo}>\r\n              <label>\r\n                {this.roundNumber(\r\n                  this.state.multiplier * item.serving_weight_grams\r\n                )}\r\n              </label>\r\n              <FormHelperText id=\"serving_unit\">grams</FormHelperText>\r\n            </Grid>\r\n            <Grid xs={4} className={classes.itemInfo}>\r\n              <label>\r\n                {this.roundNumber(this.state.multiplier * item.nf_calories)}\r\n              </label>\r\n              <FormHelperText id=\"serving_unit\">calories</FormHelperText>\r\n            </Grid>\r\n          </Grid>\r\n        </DialogContent>\r\n        <Divider />\r\n        <DialogContent id=\"mealType\">\r\n          <FormControl variant=\"filled\" className={classes.formControl}>\r\n            <Grid>\r\n              <FormLabel>Add To Today</FormLabel>\r\n              <br />\r\n              <Select\r\n                className={classes.mealTypeSelect}\r\n                native\r\n                value={this.state.mealType ? this.state.mealType : types[0]}\r\n                onChange={this.changeMealType}\r\n              >\r\n                {types.map(type => {\r\n                  return <option value={type}>{type}</option>;\r\n                })}\r\n              </Select>\r\n            </Grid>\r\n            <br />\r\n            <Grid container justify=\"flex-end\">\r\n              <Button onClick={this.addItem}>Add</Button>\r\n            </Grid>\r\n          </FormControl>\r\n        </DialogContent>\r\n      </Dialog>\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { item } = this.props;\r\n    this.setState({ base_qty: item.serving_qty, qty: item.serving_qty });\r\n  }\r\n}\r\nexport default withStyles(styles)(Popup);\r\n","import React, { Component } from \"react\";\r\nimport Autosuggest from \"react-autosuggest\";\r\nimport axios from \"axios\";\r\n\r\nimport match from \"autosuggest-highlight/match\";\r\nimport parse from \"autosuggest-highlight/parse\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { List } from \"@material-ui/core\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\n\r\nconst style = theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  container: {\r\n    position: \"relative\",\r\n    backgroundColor: \"white\",\r\n    zIndex: 0\r\n  },\r\n  suggestionsContainerOpen: {\r\n    backgroundColor: \"white\",\r\n    position: \"absolute\",\r\n    zIndex: 2,\r\n    paddingLeft: theme.spacing(1),\r\n    borderRadius: theme.spacing(1),\r\n    marginTop: theme.spacing(1),\r\n    left: 0,\r\n    right: 0\r\n  },\r\n  suggestion: {\r\n    display: \"block\"\r\n  },\r\n  suggestionsList: {\r\n    margin: 0,\r\n    padding: 0,\r\n    listStyleType: \"none\"\r\n  },\r\n  suggestionImage: {\r\n    width: \"40px\",\r\n    height: \"40px\",\r\n    borderRadius: \"4px\"\r\n  },\r\n  divider: {\r\n    height: theme.spacing(2)\r\n  },\r\n  fab: {\r\n    position: \"absolute\",\r\n    bottom: \"2%\",\r\n    right: \"2%\"\r\n  }\r\n});\r\n\r\n// fetch the data from the API\r\nconst getSuggestions = query => {\r\n  if (query) {\r\n    return axios\r\n      .get(\r\n        `https://trackapi.nutritionix.com/v2/search/instant?query=${query}`,\r\n        {\r\n          headers: {\r\n            \"x-app-id\": \"30645a8a\",\r\n            \"x-app-key\": \"c480af1726fb78bb87f97bb49779e736\"\r\n          }\r\n        }\r\n      )\r\n      .then(({ data }) => {\r\n        var result = Object.keys(data).map(key => {\r\n          return { title: key, value: data[key].slice(0, 5) };\r\n        });\r\n        return result;\r\n      });\r\n  } else {\r\n    return [];\r\n  }\r\n};\r\n\r\n// When suggestion is clicked, Autosuggest needs to populate the input\r\n// based on the clicked suggestion. Teach Autosuggest how to calculate the\r\n// input value for every given suggestion.\r\n\r\n/////////////////////////////////////////////////////////////////////////////////////////////\r\nconst renderInputComponent = inputProps => {\r\n  const { classes, inputRef, ...other } = inputProps;\r\n  console.log(inputRef);\r\n  return (\r\n    <InputBase\r\n      fullWidth\r\n      startAdornment={\r\n        <InputAdornment position=\"start\">\r\n          <SearchIcon />\r\n        </InputAdornment>\r\n      }\r\n      inputprops={{\r\n        // inputRef: node => {\r\n        //   ref(node);\r\n        //   inputRef(node);\r\n        // },\r\n        classes: {\r\n          input: classes.input\r\n        }\r\n      }}\r\n      inputRef={inputRef}\r\n      {...other}\r\n    />\r\n  );\r\n};\r\n\r\nconst renderSectionTitle = section => {\r\n  return (\r\n    <Typography variant=\"overline\" align=\"left\">\r\n      <Divider component=\"div\" />\r\n      {section.title}\r\n    </Typography>\r\n  );\r\n};\r\n\r\nconst getSectionSuggestions = section => {\r\n  return section.value;\r\n};\r\n\r\nclass SearchSuggestions extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      single: \"\",\r\n      popper: \"\",\r\n      stateSuggestions: [],\r\n      anchorEl: null,\r\n      value: \"\",\r\n      suggestions: [],\r\n\r\n      classes: null\r\n    };\r\n  }\r\n\r\n  isLastSuggestion = suggestion => {\r\n    const lastCommon = this.state.stateSuggestions[0].value[4];\r\n    const lastBranded = this.state.stateSuggestions[1].value[4];\r\n    return (\r\n      JSON.stringify(suggestion) == JSON.stringify(lastCommon) ||\r\n      JSON.stringify(suggestion) == JSON.stringify(lastBranded)\r\n    );\r\n  };\r\n\r\n  renderSuggestion = (suggestion, { query, isHighlighted }) => {\r\n    return (\r\n      <List selected={isHighlighted} component=\"div\">\r\n        <MenuItem component=\"div\" style={{ whiteSpace: \"normal\" }}>\r\n          <ListItemAvatar>\r\n            <Avatar\r\n              src={suggestion.photo.thumb}\r\n              style={{ width: \"40px\", height: \"40px\", borderRadius: \"4px\" }}\r\n            />\r\n          </ListItemAvatar>\r\n          <ListItemText primary={suggestion.food_name} />\r\n        </MenuItem>\r\n        {this.isLastSuggestion(suggestion) ? null : <Divider variant=\"inset\" />}\r\n      </List>\r\n    );\r\n  };\r\n\r\n  handleSuggestionsFetchRequested = ({ value }) => {\r\n    getSuggestions(value).then(data => {\r\n      this.setState({\r\n        stateSuggestions: data\r\n      });\r\n    });\r\n  };\r\n\r\n  handleSuggestionsClearRequested = () => {\r\n    this.setState({\r\n      stateSuggestions: []\r\n    });\r\n  };\r\n\r\n  handleChange = name => (event, { newValue }) => {\r\n    this.setState({\r\n      ...this.state,\r\n      [name]: newValue\r\n    });\r\n  };\r\n\r\n  getSuggestionValue = suggestion => {\r\n    this.props.setItem(suggestion);\r\n    return suggestion.food_name;\r\n  };\r\n\r\n  storeInputReference = autosuggest => {\r\n    if (autosuggest !== null) {\r\n      this.input = autosuggest.input;\r\n      console.log(\"this input is\");\r\n      console.log(autosuggest);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { value, suggestions, anchorEl, stateSuggestions } = this.state;\r\n\r\n    const { classes, inputRef } = this.props;\r\n\r\n    const autosuggestProps = {\r\n      renderInputComponent,\r\n      suggestions: this.state.stateSuggestions,\r\n      onSuggestionsFetchRequested: this.handleSuggestionsFetchRequested,\r\n      onSuggestionsClearRequested: this.handleSuggestionsClearRequested,\r\n      getSuggestionValue: this.getSuggestionValue,\r\n      renderSuggestion: this.renderSuggestion\r\n    };\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <Autosuggest\r\n          multiSection={true}\r\n          renderSectionTitle={renderSectionTitle}\r\n          getSectionSuggestions={getSectionSuggestions}\r\n          {...autosuggestProps}\r\n          inputProps={{\r\n            classes,\r\n            id: \"react-autosuggest-simple\",\r\n            label: \"searchFood\",\r\n            placeholder: \"Search Food...\",\r\n            value: this.state.single,\r\n            onChange: this.handleChange(\"single\"),\r\n            inputRef: inputRef\r\n          }}\r\n          theme={{\r\n            container: classes.container,\r\n            suggestionsContainerOpen: classes.suggestionsContainerOpen,\r\n            suggestionsList: classes.suggestionsList,\r\n            suggestion: classes.suggestion\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(style)(SearchSuggestions);\r\n","import React, { Component } from \"react\";\r\nimport Moment from \"react-moment\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIosOutlined\";\r\nimport ArrowForwardIosIcon from \"@material-ui/icons/ArrowForwardIos\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    padding: \"10px 0\"\r\n  }\r\n});\r\n\r\nclass DatePicker extends Component {\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { date, onClick } = this.props;\r\n    return (\r\n      <div className={classes.root}>\r\n        <Grid container justify=\"center\">\r\n          <ArrowBackIosIcon onClick={() => onClick(-1)} />\r\n\r\n          <Moment format=\"YYYY/MM/DD\">{date}</Moment>\r\n\r\n          <ArrowForwardIosIcon onClick={() => onClick(1)} />\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(DatePicker);\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport Popup from \"./popup/Popup\";\r\nimport SearchSuggestions from \"./SearchSuggestions\";\r\n\r\nimport { AppBar, Paper } from \"@material-ui/core\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nimport DatePicker from \"../dashboard/DatePicker\";\r\n\r\nconst styles = theme => ({\r\n  nav: {\r\n    zIndex: 2\r\n  },\r\n  root: {\r\n    padding: \"4px 4px\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    margin: \"auto\"\r\n  },\r\n  input: {\r\n    marginLeft: theme.spacing(1),\r\n    flex: 1,\r\n    padding: \"5px 0\"\r\n  },\r\n  iconButton: {\r\n    padding: 10\r\n  },\r\n  suggestionBar: {}\r\n});\r\n\r\nclass SearchBar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      query: \"\",\r\n      results: null,\r\n      item: null,\r\n      showPopup: false,\r\n      showSuggestionBar: false,\r\n      date: \"\"\r\n    };\r\n\r\n    this.config = {\r\n      headers: {\r\n        \"Content-Type\":\r\n          \"application/json, x-app-id:30645a8a x-app-key:c480af1726fb78bb87f97bb49779e736\"\r\n      }\r\n    };\r\n  }\r\n\r\n  handleInputChange = () => {\r\n    this.setState({ query: this.search.value }, () => {\r\n      if (this.state.query.length > 0) {\r\n        this.getSearchResult();\r\n      } else {\r\n        this.setState({ results: null });\r\n      }\r\n    });\r\n  };\r\n\r\n  getSearchResult = () => {\r\n    axios\r\n      .get(\r\n        `https://trackapi.nutritionix.com/v2/search/instant?query=${this.state.query}`,\r\n        {\r\n          headers: {\r\n            \"x-app-id\": \"30645a8a\",\r\n            \"x-app-key\": \"c480af1726fb78bb87f97bb49779e736\"\r\n          }\r\n        }\r\n      )\r\n      .then(({ data }) => {\r\n        this.setState({ results: data });\r\n      });\r\n  };\r\n\r\n  toggleSuggestionBar = () => {\r\n    setTimeout(() => {\r\n      this.setState({ showSuggestionBar: !this.state.showSuggestionBar });\r\n    }, 500);\r\n  };\r\n\r\n  togglePopup = () => {\r\n    this.setState({\r\n      showPopup: !this.state.showPopup\r\n    });\r\n  };\r\n\r\n  setItem = item => {\r\n    if (!item.nix_item_id) {\r\n      axios\r\n        .post(\r\n          `https://trackapi.nutritionix.com/v2/natural/nutrients`,\r\n          {\r\n            query: item.food_name\r\n          },\r\n          {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              \"x-app-id\": \"30645a8a\",\r\n              \"x-app-key\": \"c480af1726fb78bb87f97bb49779e736\"\r\n            }\r\n          }\r\n        )\r\n        .then(({ data }) => {\r\n          this.setState({ item: data.foods[0] }, () => {\r\n            this.togglePopup();\r\n          });\r\n        });\r\n    } else {\r\n      axios\r\n        .get(\r\n          ` https://trackapi.nutritionix.com/v2/search/item?nix_item_id=${item.nix_item_id}`,\r\n          {\r\n            headers: {\r\n              \"x-app-id\": \"30645a8a\",\r\n              \"x-app-key\": \"c480af1726fb78bb87f97bb49779e736\"\r\n            }\r\n          }\r\n        )\r\n        .then(({ data }) => {\r\n          this.setState({ item: data.foods[0] }, () => {\r\n            this.togglePopup();\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { classes, inputRef } = this.props;\r\n    return (\r\n      <Grid>\r\n        <AppBar position=\"static\" className={classes.nav}>\r\n          <Paper className={classes.root}>\r\n            <SearchSuggestions inputRef={inputRef} setItem={this.setItem} />\r\n          </Paper>\r\n          <DatePicker\r\n            date={this.props.date}\r\n            onClick={this.props.changeDataDate}\r\n          />\r\n        </AppBar>\r\n\r\n        {this.state.showPopup ? (\r\n          <Popup\r\n            open={this.state.showPopup}\r\n            add={item => this.props.addItem(item)}\r\n            close={this.togglePopup}\r\n            item={this.state.item}\r\n          />\r\n        ) : null}\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(SearchBar);\r\n","import React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\n\nimport Dashboard from \"./dashboard/Dashboard\";\nimport SearchBar from \"./searchbar/SearchBar\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\n\nconst styles = theme => ({\n  fab: {\n    position: \"absolute\",\n    bottom: \"2%\",\n    right: \"2%\"\n  }\n});\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      date: 0\n    };\n    this.inputRef = React.createRef();\n  }\n\n  changeDataDate = day => {\n    let date = this.state.date;\n    date.setDate(date.getDate() + day);\n    this.setState({\n      date: date\n    });\n    this.dashboard.findIndexByDate(date);\n  };\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <div className=\"App\">\n        <div className=\"container\"></div>\n        <SearchBar\n          addItem={item => this.dashboard.addIntake(item)}\n          date={this.state.date}\n          changeDataDate={date => this.changeDataDate(date)}\n          inputRef={this.inputRef}\n        />\n        <Dashboard\n          ref={instance => {\n            this.dashboard = instance;\n          }}\n          date={this.state.date}\n        />\n        <Fab\n          onClick={() => this.inputRef.current.focus()}\n          className={classes.fab}\n          color=\"primary\"\n          aria-label=\"add\"\n        >\n          <AddIcon />\n        </Fab>\n      </div>\n    );\n  }\n\n  componentDidMount() {\n    this.setState(\n      {\n        date: new Date()\n      },\n      () => {\n        this.dashboard.findIndexByDate(new Date());\n      }\n    );\n  }\n}\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}